@import "variables";

.key {
  float: left;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  position: relative;
  cursor: pointer;
  box-shadow: rgba(0, 0, 0, 0.944) 0px $key_BorderRadius 4px, rgba(0, 0, 0, 0.958) 0px $key_BorderRadius 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
  border-bottom-left-radius: $key_BorderRadius;
  border-bottom-right-radius: $key_BorderRadius;
  transition: cubic-bezier(0.175, 0.285, 0.22, 1.275) 0.05s;
  &:hover {
    box-shadow: rgba(0, 0, 0, 0.644) 0px 5px 4px, rgba(0, 0, 0, 0.658) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
    // background-color: rgb(99, 151, 219);
  }
  padding-bottom: 10px;
  text-transform: uppercase;
  font-weight: 600;
  font-size: 1.5rem;
  color: $blackKey_Color;

  @media (max-width: 767px) {
    font-size: 0;
  }
}


.white {
  height: $whiteKey_Height;
  width: $whiteKey_Width;
  z-index: 1;
  border-top: $border_Width solid $whiteKey_BorderColor;
  border-bottom: $border_Width solid $whiteKey_BorderColor;
  border-left: $border_Width solid $whiteKey_BorderColor;
  background-color: $whiteKey_Color;
  &:hover {
    box-shadow: rgba(0, 0, 0, 0.644) 0px 5px 4px, rgba(0, 0, 0, 0.658) 0px 7px 15px -3px, rgba(0, 0, 0, 0.7) 0px 2px 2px 1px inset
  }
}

.key.selected::before {
  content: "";
  background: linear-gradient(90deg, rgb(222, 193, 250), rgb(225, 159, 255), rgb(203, 72, 255));
  position: absolute;
  top: 10px;
  height: 98%;
  width: 90%;
  z-index: -1;
  filter: blur(10px);
  transition: 0.4s;
  box-shadow: inset 10px 5px 5px 9px #832cf5;
  @media (max-width: 767px) {
    top: 0px;
    width: 100%;
    height: 100%;
    filter: blur(0px);
    box-shadow: none;
    background-color: #832cf5;
  }
}

.black {
  height: $blackKey_Height;
  width: $blackKey_Width;
  color: aliceblue;
  z-index: 2;
  box-shadow: rgba(0, 0, 0, 0.944) 0px 8px 4px, rgba(0, 0, 0, 0.958) 0px 7px 13px -3px, 1px 1px 4px 2px rgba(107, 107, 107, 0.75) inset;
  border: $border_Width solid $blackKey_BorderColor;
  background-color: $blackKey_Color;
  border-top: none;
  &:hover {
    height: $blackKey_Height * 1.02;
    box-shadow: rgba(0, 0, 0, 0.644) 0px 5px 4px, rgba(0, 0, 0, 0.658) 0px 7px 13px -3px, 1px 5px 4px 2px rgba(107, 107, 107, 0.75) inset;

  }
}

.a,
.b,
.d,
.e,
.g,
.black {
  margin: 0 0 0 $blackKey_Offset;
}

#keyboard > .note:last-child {
  border-right: $border_Width solid $whiteKey_BorderColor;
}

#keyboardCanvasContainer {
  display: flex;
  justify-content: center;
  width: 100%;
  margin: 0 auto;
  overflow-x: auto;
}

#ukeleleCanvas {
  margin: 2rem;
}

#keyboard {
  border-top: 5px solid $piano_BorderColor;
  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px, rgba(0, 0, 0, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px;
  user-select: none;
  display: flex;
  justify-content: center;
  box-sizing: content-box;
  margin:  0 auto;
  width: 80vw;
}

.selected-chord {
  width: 100%;
  background-color: $whiteKey_Color;
  color: $blackKey_Color;
  font-size: 2rem;
  text-transform: capitalize;
  border: 4px solid #767546;
  border-radius: $key_BorderRadius;
  text-align: center;
  margin: 10px auto;
  grid-column-start: 2;

  @media (max-width: 767px) {
    font-size: 1rem;
  }
}

.bottom-panel {
  position: sticky;
  bottom: 40px;
  background-color: #121212;
  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(134, 139, 143, 0.15) 0px 1px 3px 1px;
  padding: 0.5rem 0 2rem 0;

  @media screen and (max-width: 1440px) {
    // bottom: 50px;
    position: relative;
  }
}

.view-select {
  grid-column-start: 3;
  display: inherit;
  justify-self: flex-end;
  width: 70%;
}

.bottom-panel-info {
  margin: 0 auto;
  display: grid;
  width: 80%;
  grid-template-columns: 2fr 5fr 2fr;
  align-items: center;
}
